/*
 * Distinary.cpp
 *
 *  Created on: 31-Mar-2018
 *      Author: tapesh
 */

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include<unordered_map>
#include<map>
using namespace std;


int main1() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    unsigned long long number=0;
    multimap<string> v;
    string name;
    string email;
    cin>>number;
        for(auto a =0; a<number;a++)
        {
            cin>>name>>email;
            v.push_back(name);
        }
    sort(v.begin(),v.end(),[&](string &l, string &r){return l<r;});
    for(auto &at:v)
    {
        cout<<at<<endl;
    }
    return 0;
}

int main2() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    unordered_map<string,unsigned int> map;
    unsigned int value;
    string name;
    unsigned long int number;

    cin>>number;
    for(int i =0; i < number;i++)
    {
        cin>>name;
        cin>>value;
        map.insert(make_pair(name,value));
    }
    cout<<"*****************"<<map.size()<<endl;
    for(auto &at : map)
    {
        cin>>name;
        unordered_map<string,unsigned int>::iterator it = map.find(name);
        if(it!=map.end())
        {
            cout<<it->first.c_str()<<"="<<it->second<<endl;
        }
        else{
        	cout<<"Not found"<<endl;
        }
    }

    return 0;
}

int main()
{
	main1();
	return 0;
}
