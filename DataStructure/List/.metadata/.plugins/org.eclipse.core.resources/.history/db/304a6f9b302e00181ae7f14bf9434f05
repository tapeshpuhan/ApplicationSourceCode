/*
 * HashTables:RansomNote.cpp
 *
 *  Created on: 23-Mar-2018
 *      Author: tapesh
 */
#include<iostream>
#include<vector>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;

bool ransom_note(vector<string> magazine, vector<string> ransom) {
	unordered_map<string, unsigned int> m_mgzin;

	for(auto &at:magazine)
	{
		m_mgzin[at]++;
	}
	for(auto &at:ransom)
	{
		if(m_mgzin.find(at)!=m_mgzin.end())
		{
			m_mgzin[at]--;
			if(m_mgzin[at] == 0)
			{
				m_mgzin.erase(at);
			}
		}
		else
		{
			return false;
		}
	}
    return true;
}

int main(){
    int m;
    int n;
    /*cin >> m >> n;
    vector<string> magazine(m);
    for(int magazine_i = 0;magazine_i < m;magazine_i++){
       cin >> magazine[magazine_i];
    }
    vector<string> ransom(n);
    for(int ransom_i = 0;ransom_i < n;ransom_i++){
       cin >> ransom[ransom_i];
    }*/

    m = 6;
    n = 5;
    vector<string> magazine = {"give" ,"me" ,"one" ,"grand" ,"today", "night"};
    vector<string> ransom = {"give"  ,"one" ,"grand" ,"today"};
    if(ransom_note(magazine, ransom))
        cout << "Yes\n";
    else
        cout << "No\n";
    return 0;
}



