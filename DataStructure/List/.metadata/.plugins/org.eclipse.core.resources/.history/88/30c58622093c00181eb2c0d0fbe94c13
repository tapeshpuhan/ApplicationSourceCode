/*
 * XmlParser.cpp
 *
 *  Created on: 08-Apr-2018
 *      Author: tapesh
 */
#include "XmlParser.h"
#include<istream>
#include <fstream>

void XmlPars::ParseXml(const string &path)
{
	ifstream file(path);
	map<string,tBook> data;
	if(!file.is_open())
	{
		cout<<"Error: file not found"<<endl;
		return;
	}


	getBookInfo(data,file);

}

void XmlPars::getBookInfo(map<string,tBook> &op, ifstream &file)
{
	string line;
	string::size_type po=0;
	string::size_type npo=0;

	getline(file,line);
	while(file.good())
	{
		if(line.find("=")==string::npos)
		{
			getline(file,line);
			continue;
		}

		{

			if((po = line.find("<") )!= string::npos)
			{
				string key,value;
				string cat,vcat;
				/*Find the key */
				npo = line.find("=");
				key = line.substr(po+1,npo-(po+1));
				/*Find the value*/
				po = npo;
				npo = line.find(">");
				value = line.substr(po+1,npo-(po+1));
				cout<<key.c_str()<<"  :: "<<value.c_str()<<endl;


				while(1)
				{
					getline(file,line);
					if( line.find("=")!=string::npos)
						break;
					else
					{
						po = line.find("<");
						npo = line.find(">");
						cat = line.substr(po+1,npo-(po+1));
						/*Find the value*/
						po = npo;
						npo = line.find("</");
						vcat = line.substr(po+1,npo-(po+1));
						cout<<cat.c_str()<<"  :: "<<vcat.c_str()<<endl;
					}
				}
			}
		}
	}
	//cout<<line.c_str()<<endl;

}
int main()
{
	std::shared_ptr<XmlPars> ptr = make_shared<XmlPars>();
	ptr->ParseXml(string("/home/tapesh/C++11/file.xml"));
	return 0;
}

