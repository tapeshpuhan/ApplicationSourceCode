/*
 * GoW.cpp
 *
 *  Created on: 07-Apr-2018
 *      Author: tapesh
 */
#include "BaseFile.h"

string f()
{
	//return "abc";
	string a="abd";
	return a;
}

void g()
{
	//const string& s = f();
	//string& s = f();

	int x = 1;
	  for( int i = 0; i < 100; ++i );
	    /*// What will the next line do? Increment???????????/*/
	    x = x+1;
	  //std::cout << x << std::endl;

	//cout<<s.c_str()<<endl;
}
struct X {
  static bool f( int* p )
  {
    return p && 0[p] and not p[1:>>p[2];
  };
};

class test
{
public:
	void fun(int i)
	{
		cout<<"Hiii"<<endl;
	}
};
/*
template<typename T, void(T::*F)()>
class Callback
{
	T &obj;
public:
	Callback(T ob):obj(ob){}
	void exicute()
	{
		(obj.*F)();
	}
};
*/

template<typename T>
class Callback
{

public:
	typedef template<typename ...Arg> void (T::*Fun)(Arg...);
	Callback(T ob, Fun f):fu(f),obj(ob){

	}
	void exicute()
	{
		(obj.*fu)(0);
	}
private:
		T &obj;
		Fun fu;
};

int main()
{
	test obj;
	Callback<test> var(obj,&test::fun);
	var.exicute();
	return 0;
}
#if 0
int main()
{
	/*//g();
	string pt="tapeswar";
	string d="paply";
	//pt.replace(pt.begin(),pt.begin()+4,"hallo");
	pt.swap(d);
	cout<<pt.c_str();*/

	vector<int> v = {1,2,3,4};

	//v.insert(v.begin()+2,45);
	vector<int> v2;
	v2.assign(v.begin(),v.begin()+3);

	for(auto &at:v2)
	{
		cout<<at<<" ";
	}
cout<<endl;
	return 0;
}
#endif


